{"ast":null,"code":"import axios from'axios';import{CREATE_ORDER_REQUEST,CREATE_ORDER_SUCCESS,CREATE_ORDER_FAIL,MY_ORDERS_REQUEST,MY_ORDERS_SUCCESS,MY_ORDERS_FAIL,ALL_ORDERS_REQUEST,ALL_ORDERS_SUCCESS,ALL_ORDERS_FAIL,UPDATE_ORDER_SUCCESS,UPDATE_ORDER_REQUEST,UPDATE_ORDER_FAIL,ORDER_DETAILS_REQUEST,ORDER_DETAILS_SUCCESS,ORDER_DETAILS_FAIL,CLEAR_ERRORS}from'../constants/orderConstants';export const createOrder=order=>async(dispatch,getState)=>{try{dispatch({type:CREATE_ORDER_REQUEST});const config={headers:{'Content-Type':'application/json'}};const{data}=await axios.post('/api/v1/order/new',order,config);dispatch({type:CREATE_ORDER_SUCCESS,payload:data});}catch(error){dispatch({type:CREATE_ORDER_FAIL,payload:error.response.data.message});}};// Get curretly logged in user orders\nexport const myOrders=()=>async dispatch=>{try{dispatch({type:MY_ORDERS_REQUEST});const{data}=await axios.get('/api/v1/orders/me');dispatch({type:MY_ORDERS_SUCCESS,payload:data.orders});}catch(error){dispatch({type:MY_ORDERS_FAIL,payload:error.response.data.message});}};// Get order details\nexport const getOrderDetails=id=>async dispatch=>{try{dispatch({type:ORDER_DETAILS_REQUEST});const{data}=await axios.get(\"/api/v1/order/\".concat(id));dispatch({type:ORDER_DETAILS_SUCCESS,payload:data.order});}catch(error){dispatch({type:ORDER_DETAILS_FAIL,payload:error.response.data.message});}};// Get all orders - ADMIN\nexport const allOrders=()=>async dispatch=>{try{dispatch({type:ALL_ORDERS_REQUEST});const{data}=await axios.get(\"/api/v1/admin/orders\");dispatch({type:ALL_ORDERS_SUCCESS,payload:data});}catch(error){dispatch({type:ALL_ORDERS_FAIL,payload:error.response.data.message});}};// update order\nexport const updateOrder=(id,orderData)=>async dispatch=>{try{dispatch({type:UPDATE_ORDER_REQUEST});const config={headers:{'Content-Type':'application/json'}};const{data}=await axios.put(\"/api/v1/admin/order/\".concat(id),orderData,config);dispatch({type:UPDATE_ORDER_SUCCESS,payload:data.success});}catch(error){dispatch({type:UPDATE_ORDER_FAIL,payload:error.response.data.message});}};// Clear Errors\nexport const clearErrors=()=>async dispatch=>{dispatch({type:CLEAR_ERRORS});};","map":{"version":3,"names":["axios","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_REQUEST","UPDATE_ORDER_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","CLEAR_ERRORS","createOrder","order","dispatch","getState","type","config","headers","data","post","payload","error","response","message","myOrders","get","orders","getOrderDetails","id","concat","allOrders","updateOrder","orderData","put","success","clearErrors"],"sources":["C:/Users/phamtiendung/Downloads/doan_2/doan/doan/frontend/src/actions/orderActions.js"],"sourcesContent":["import axios from 'axios'\n\nimport {\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    CREATE_ORDER_FAIL,\n    MY_ORDERS_REQUEST,\n    MY_ORDERS_SUCCESS,\n    MY_ORDERS_FAIL,\n    ALL_ORDERS_REQUEST,\n    ALL_ORDERS_SUCCESS,\n    ALL_ORDERS_FAIL,\n    UPDATE_ORDER_SUCCESS,\n    UPDATE_ORDER_REQUEST,\n    UPDATE_ORDER_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    CLEAR_ERRORS\n} from '../constants/orderConstants'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n\n        dispatch({ type: CREATE_ORDER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/order/new', order, config)\n\n        dispatch({\n            type: CREATE_ORDER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CREATE_ORDER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get curretly logged in user orders\nexport const myOrders = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: MY_ORDERS_REQUEST });\n\n        const { data } = await axios.get('/api/v1/orders/me')\n\n        dispatch({\n            type: MY_ORDERS_SUCCESS,\n            payload: data.orders\n        })\n\n    } catch (error) {\n        dispatch({\n            type: MY_ORDERS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get order details\nexport const getOrderDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: ORDER_DETAILS_REQUEST });\n\n        const { data } = await axios.get(`/api/v1/order/${id}`)\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data.order\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get all orders - ADMIN\nexport const allOrders = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_ORDERS_REQUEST });\n\n        const { data } = await axios.get(`/api/v1/admin/orders`)\n\n        dispatch({\n            type: ALL_ORDERS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_ORDERS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// update order\nexport const updateOrder = (id, orderData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_ORDER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/order/${id}`, orderData, config)\n\n        dispatch({\n            type: UPDATE_ORDER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_ORDER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}